function bubbleSort(arr) {
  let n = arr.length;
  
  // Проходим по массиву n-1 раз
  for (let i = 0; i < n - 1; i++) {
    // Каждый последующий проход короче на 1 элемент
    for (let j = 0; j < n - 1 - i; j++) {
      // Если текущий элемент больше следующего - меняем местами
      if (arr[j] > arr[j + 1]) {
        // Меняем элементы местами
        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]]; // деструктурирующее присваивание
      }
    }
  }
  
  return arr;
}

// Пример использования
const array = [64, 34, 25, 1, 12, 22, 11, 2, 9];
console.log("До сортировки:", array);
console.log("После сортировки:", bubbleSort(array)); // [1, 2, 9, 11, 12, 22, 25, 34, 64]

// сложность - O(n^2)

// количество сравнений:
// - отсортированный - O(n)
// - случайный - O(n^2)
// - обратный - O(n^2)

// количество перестановок:
// - отсортированный - O(1)
// - случайный - O(n^2)
// - обратный - O(n^2)

// память - O(1)

// особенности: лучше только сортировки подбором